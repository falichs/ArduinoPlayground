#include "Arduino.h"
#include "FexMax7219.h"

// SHUTDOWN REGISTER
#define ADDRESS_MAX7219_SHUTDOWNREGISTER 0x0C
#define DATA_MAX7219_SHUTDOWNREGISTER_SHUTDOWN 0x00
#define DATA_MAX7219_SHUTDOWNREGISTER_NORMAL 0x01

// DECODE-MODE REGISTER
#define ADDRESS_MAX7219_DECODEREGISTER 0x09
#define DATA_MAX7219_DECODEREGISTER_ALL 0xFF
#define DATA_MAX7219_DECODEREGISTER_NONE 0xFF

// SEGMENT-CODES
#define SEG_MAX7219_SEG_A 0x40
#define SEG_MAX7219_SEG_B 0x20
#define SEG_MAX7219_SEG_C 0x10
#define SEG_MAX7219_SEG_D 0x08
#define SEG_MAX7219_SEG_E 0x04
#define SEG_MAX7219_SEG_F 0x02
#define SEG_MAX7219_SEG_G 0x01
#define SEG_MAX7219_SEG_DP 0x80

// CHAR-CODES
#define DATA_MAX7219_CHAR_0 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F
#define DATA_MAX7219_CHAR_1 SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C
#define DATA_MAX7219_CHAR_2 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_3 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_4 SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_5 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_6 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_7 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C
#define DATA_MAX7219_CHAR_8 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_9 SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_MINUS SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_UNDERSCORE SEG_MAX7219_SEG_D
#define DATA_MAX7219_CHAR_A SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_E SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_H SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_C | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_L SEG_MAX7219_SEG_D | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F
#define DATA_MAX7219_CHAR_P SEG_MAX7219_SEG_A | SEG_MAX7219_SEG_B | SEG_MAX7219_SEG_E | SEG_MAX7219_SEG_F | SEG_MAX7219_SEG_G
#define DATA_MAX7219_CHAR_BLANK 0x00
#define DATA_MAX7219_CHAR_DP SEG_MAX7219_SEG_DP

//DECODE MODE CHARS
#define DATA_MAX7219_D_CHAR_0 0x00
#define DATA_MAX7219_D_CHAR_1 0x01
#define DATA_MAX7219_D_CHAR_2 0x02
#define DATA_MAX7219_D_CHAR_3 0x03
#define DATA_MAX7219_D_CHAR_4 0x04
#define DATA_MAX7219_D_CHAR_5 0x05
#define DATA_MAX7219_D_CHAR_6 0x06
#define DATA_MAX7219_D_CHAR_7 0x07
#define DATA_MAX7219_D_CHAR_8 0x08
#define DATA_MAX7219_D_CHAR_9 0x09
#define DATA_MAX7219_D_CHAR_MINUS 0x0A
#define DATA_MAX7219_D_CHAR_E 0x0B
#define DATA_MAX7219_D_CHAR_H 0x0C
#define DATA_MAX7219_D_CHAR_L 0x0D
#define DATA_MAX7219_D_CHAR_P 0x0E
#define DATA_MAX7219_D_CHAR_BLANK 0x0F
#define DATA_MAX7219_D_CHAR_DP 0x80

// DIGIT_REGISTERS
#define ADDRESS_MAX7219_DIGIT_0 0x01
#define ADDRESS_MAX7219_DIGIT_1 0x02
#define ADDRESS_MAX7219_DIGIT_2 0x03
#define ADDRESS_MAX7219_DIGIT_3 0x04
#define ADDRESS_MAX7219_DIGIT_4 0x05
#define ADDRESS_MAX7219_DIGIT_5 0x06
#define ADDRESS_MAX7219_DIGIT_6 0x07
#define ADDRESS_MAX7219_DIGIT_7 0x08


// INTENSITY REGISTER
#define ADDRESS_MAX7219_INTENSITYREGISTER 0x09
#define DATA_MAX7219_INTENSITYREGISTER_1 0x00
#define DATA_MAX7219_INTENSITYREGISTER_2 0x01
#define DATA_MAX7219_INTENSITYREGISTER_3 0x02
#define DATA_MAX7219_INTENSITYREGISTER_4 0x03
#define DATA_MAX7219_INTENSITYREGISTER_5 0x04
#define DATA_MAX7219_INTENSITYREGISTER_6 0x05
#define DATA_MAX7219_INTENSITYREGISTER_7 0x06
#define DATA_MAX7219_INTENSITYREGISTER_8 0x07
#define DATA_MAX7219_INTENSITYREGISTER_9 0x08
#define DATA_MAX7219_INTENSITYREGISTER_10 0x09
#define DATA_MAX7219_INTENSITYREGISTER_11 0x0A
#define DATA_MAX7219_INTENSITYREGISTER_12 0x0B
#define DATA_MAX7219_INTENSITYREGISTER_13 0x0C
#define DATA_MAX7219_INTENSITYREGISTER_14 0x0D
#define DATA_MAX7219_INTENSITYREGISTER_15 0x0E
#define DATA_MAX7219_INTENSITYREGISTER_16 0x0F

// SCAN LIMIT REGISTER
#define ADDRESS_MAX7219_SCANLIMITREGISTER 0x0B
#define DATA_MAX7219_SCANLIMITREGISTER_ALL 0x07


// DISPLAY-TEST REGISTER
#define ADDRESS_MAX7219_TESTREGISTER 0x0F
#define DATA_MAX7219_TESTREGISTER_NORMAL 0x00
#define DATA_MAX7219_TESTREGISTER_TEST 0x01

// ASCII CHARS
#define ASCII_0 48
#define ASCII_1 49
#define ASCII_2 50
#define ASCII_3 51
#define ASCII_4 52
#define ASCII_5 53
#define ASCII_6 54
#define ASCII_7 55
#define ASCII_8 56
#define ASCII_9 57
#define ASCII_MINUS 45
#define ASCII_UNDERSCORE 95
#define ASCII_A 65
#define ASCII_H 72
#define ASCII_E 69
#define ASCII_L 76
#define ASCII_P 80
#define ASCII_DP 46

FexMax7219::FexMax7219(int pinLOAD, int pinCLK, int pinDATA)
{
	_pinLOAD = pinLOAD;
	_pinCLK = pinCLK;
	_pinDATA = pinDATA;
	pinMode(_pinCLK, OUTPUT);
	pinMode(_pinDATA, OUTPUT);
	pinMode(_pinLOAD, OUTPUT);
	digitalWrite(_pinLOAD, HIGH);
	startup();
}

void FexMax7219::startup()
{
	//Disable TEST-MODE
	serialSend(ADDRESS_MAX7219_TESTREGISTER, DATA_MAX7219_TESTREGISTER_NORMAL);
	//Switch on
	serialSend(ADDRESS_MAX7219_SHUTDOWNREGISTER, DATA_MAX7219_SHUTDOWNREGISTER_NORMAL);
	//Use ALL Didgits
	serialSend(ADDRESS_MAX7219_SCANLIMITREGISTER, DATA_MAX7219_SCANLIMITREGISTER_ALL);
	//Set intensity
	serialSend(ADDRESS_MAX7219_INTENSITYREGISTER, DATA_MAX7219_INTENSITYREGISTER_16);
	//enable decode mode
	serialSend(ADDRESS_MAX7219_DECODEREGISTER, DATA_MAX7219_DECODEREGISTER_NONE);
	//blank-out displays
	serialSend(ADDRESS_MAX7219_DIGIT_0, DATA_MAX7219_CHAR_BLANK);
	serialSend(ADDRESS_MAX7219_DIGIT_1, DATA_MAX7219_CHAR_BLANK);
	serialSend(ADDRESS_MAX7219_DIGIT_2, DATA_MAX7219_CHAR_BLANK);
	serialSend(ADDRESS_MAX7219_DIGIT_3, DATA_MAX7219_CHAR_BLANK);
	serialSend(ADDRESS_MAX7219_DIGIT_4, DATA_MAX7219_CHAR_BLANK);
	serialSend(ADDRESS_MAX7219_DIGIT_5, DATA_MAX7219_CHAR_BLANK);
	serialSend(ADDRESS_MAX7219_DIGIT_6, DATA_MAX7219_CHAR_BLANK);
	serialSend(ADDRESS_MAX7219_DIGIT_7, DATA_MAX7219_CHAR_BLANK);
}

void FexMax7219::shutdown()
{
	//Switch off
	serialSend(ADDRESS_MAX7219_SHUTDOWNREGISTER, DATA_MAX7219_SHUTDOWNREGISTER_SHUTDOWN);
}

void FexMax7219::setIntensity(byte level)
{
	serialSend(ADDRESS_MAX7219_INTENSITYREGISTER, (level & 0x0F);
}

void FexMax7219::serialSend(byte address, byte data)
{
  digitalWrite(_pinLOAD, LOW);
  shiftOut(_pinDATA, _pinCLK, MSBFIRST, address);
  shiftOut(_pinDATA, _pinCLK, MSBFIRST, data);
  digitalWrite(_pinLOAD, HIGH);
}

void FexMax7219::sendChar(char c, byte digitnum)
{
  serialSend( (digitnum & 0x07) + 0x01, decodeChar(c));
}

byte FexMax7219::decodeChar(char c)
{
  switch(c)
  {
    case ASCII_0:
      return DATA_MAX7219_CHAR_0;
    case ASCII_1:
      return DATA_MAX7219_CHAR_1;
    case ASCII_2:
      return DATA_MAX7219_CHAR_2;
    case ASCII_3:
      return DATA_MAX7219_CHAR_3;
    case ASCII_4:
      return DATA_MAX7219_CHAR_4;
    case ASCII_5:
      return DATA_MAX7219_CHAR_5;
    case ASCII_6:
      return DATA_MAX7219_CHAR_6;
    case ASCII_7:
      return DATA_MAX7219_CHAR_7;
    case ASCII_8:
      return DATA_MAX7219_CHAR_8;
    case ASCII_9:
      return DATA_MAX7219_CHAR_9;
    case ASCII_MINUS:
      return DATA_MAX7219_CHAR_MINUS;
    case ASCII_UNDERSCORE:
      return DATA_MAX7219_CHAR_UNDERSCORE;
    case ASCII_A:
      return DATA_MAX7219_CHAR_A;
    case ASCII_E:
      return DATA_MAX7219_CHAR_E;
    case ASCII_H:
      return DATA_MAX7219_CHAR_H;
    case ASCII_L:
      return DATA_MAX7219_CHAR_L;
    case ASCII_P:
      return DATA_MAX7219_CHAR_P;
    case ASCII_DP:
      return DATA_MAX7219_CHAR_DP;
    default:
      return 0x00;
  }
}

/*
void sendALT(unsigned int alt)
{
  serialSend(ADDRESS_MAX7219_DIGIT_0, chars[alt % 10]);
  alt /= 10; 
  serialSend(ADDRESS_MAX7219_DIGIT_1, chars[alt % 10]);
  alt /= 10; 
  serialSend(ADDRESS_MAX7219_DIGIT_2, chars[alt % 10]);
  alt /= 10; 
  serialSend(ADDRESS_MAX7219_DIGIT_3, chars[alt % 10]);
  alt /= 10; 
  serialSend(ADDRESS_MAX7219_DIGIT_4, chars[alt % 10]);
}

void sendHDG(short hdg)
{
  serialSend(ADDRESS_MAX7219_DIGIT_5, chars[hdg % 10]);
  hdg /= 10;
  serialSend(ADDRESS_MAX7219_DIGIT_6, chars[hdg % 10]);
  hdg /= 10;
  serialSend(ADDRESS_MAX7219_DIGIT_7, chars[hdg % 10]);
}
*/